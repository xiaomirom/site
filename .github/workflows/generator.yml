name: Generator

on:
  push:
    branches: [generator]
  pull_request:
    branches: [generator]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest

    steps:
      # - uses: actions/checkout@v2
      #   with:
      #     persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
      #     #fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
      #     fetch-depth: 1
      #     repository: ${{ secrets.GENERATOR_SOURCE }}
      #     token: ${{ secrets.GENERATOR_PAT }}
      #     ref: master
          #submodules: recursive
      - name: Set up auth
        run: |
          git config --global http.https://github.com/.extraheader "Authorization: Basic $(echo -n "${{ secrets.GENERATOR_GITHUB_ACTOR }}:${{ secrets.GENERATOR_PAT }}" | base64 --wrap=0)"
      - name: Checkout source
        run: |
          git version
          git clone -b master --depth 1 https://github.com/${{ secrets.GENERATOR_SOURCE }} $GITHUB_WORKSPACE
          git config --local gc.auto 0
      - name: Checkout submodules
        run: |
          git submodule sync --recursive
          &>/dev/null git -c protocol.version=2 submodule update --init --force --depth=1 --recursive
      - name: Removing auth
        run: |
          git config --global --unset-all 'http.https://github.com/.extraheader'
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.7.x"
      - uses: actions/cache@v2
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Remove apt repos that are known to break from time to time
      # See https://github.com/actions/virtual-environments/issues/323
      - name: Remove broken apt repos [Ubuntu]
        if: matrix.os == 'ubuntu-latest'
        run: |
          for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done

      - name: Install dependencies
        # if: steps.cache.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y libyaml-dev jq
          &>/dev/null python -m pip install -r data_generator/requirements.txt
      - name: Setup DB
        run: |
          ${{ secrets.SETUP_DB}}
      - name: DB Varidation
        run: |
          ${{ secrets.DB_VARIDATION }}
      - name: Generating
        env:
          FORCE_UPDATE_ALL: ${{ secrets.FORCE_UPDATE_ALL }}
        run: |
          &>/dev/null python -m data_generator.generator
      - name: Commit files
        id: commit
        run: |
          git config --local user.email "xiaomirom-site-action@users.noreply.github.com"
          git config --local user.name "xiaomirom-site Github Action Bot"
          git status content/ -s | grep -o -q -m 1 "content/" && echo "::set-output name=content_updated::1" || echo "No new contents were found"
          git add .
          &>/dev/null git commit -m "Generated: $(date +%d.%m.%Y)" && echo "::set-output name=committed::1" || echo "Nothing to update"
      - name: Push changes
        run: |
          git push "https://${{ secrets.GENERATOR_GITHUB_ACTOR }}:${{ secrets.GENERATOR_PAT }}@github.com/${{ secrets.GENERATOR_SOURCE }}.git" HEAD:master
      - name: Notify Hugo site builder
        # Being pushed and pull request merged may contain site related changes, just rebuild the site always
        if: ${{ steps.commit.outputs.content_updated == '1' && steps.commit.outputs.committed == '1' || github.event_name == 'push' || github.event_name == 'pull_request' }}
        run: |
          curl -X POST -Ss https://api.github.com/repos/${{ github.repository }}/actions/workflows/build-site.yml/dispatches \
          -H 'Accept: application/vnd.github.v3+json' \
          -H 'Authorization: token ${{ secrets.PAT }}' \
          --data '{"ref": "generator"}'
